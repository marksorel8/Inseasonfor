name: Daily Update and Deployment

# on:
#   schedule:
#     - cron: '0 12 * * *'  # Daily at 5 AM Pacific / 12 PM UTC
#   push:
#     branches:
#       - main  # Run on changes to main branch

on:
  workflow_dispatch:

jobs:
  render_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up system dependencies
      # System dependencies required by Inseasonfor and SalmonForecasting packages,
      # generated using pak::pkg_sysreqs() on Ubuntu
      - name: Install system dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libx11-dev libcurl4-openssl-dev libssl-dev make \
            pandoc libfreetype6-dev libjpeg-dev libpng-dev libtiff-dev libicu-dev \
            libfontconfig1-dev libfribidi-dev libharfbuzz-dev libxml2-dev \
            libcairo2-dev zlib1g-dev libnode-dev

      # 3. Set up R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # 4. Cache R packages installed by renv
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: renv/library
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      # 5. Install renv and restore environment
      - name: Install and restore renv
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}

      # 6. Run your rendering function from the package
      - name: Render the report
        run: |
          Rscript -e 'Inseasonfor::render_page_fun()'

      # 7. Commit the updated CSVs (if changed)
      - name: Commit updated CSV files
        run: |
          git config --global user.email "mark.sorel@dfw.wa.gov"
          git config --global user.name "marksorel8"
          git add inst/data-cache/*.csv || true
          git diff --cached --quiet || git commit -m "Update CSV files" && git push

      # 8. Deploy to gh-pages
      - name: Deploy to gh-pages
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          cp inst/Rmarkdown/site/index.html index.html
          git add index.html
          git commit -m "Deploy updated report to gh-pages" || echo "No changes to commit"
          git push origin gh-pages
